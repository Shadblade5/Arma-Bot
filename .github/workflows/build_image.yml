# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build and Verify Application

# This should only execute on direct pushes to master, or a merge to master
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - closed
    branches:
      - master

permissions:
  contents: read

jobs:
  pipenv_init:
    name: pipenv-init
    runs-on: "ubuntu-latest"

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup Python
        uses: actions/setup-python@v4
      -
        name: Setup virtualenvironment
        run:
          mkdir .venv && pip3 install pipenv && pipenv install
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: init_pipenv
          path: .venv

  run_python_tests:
    runs-on: "ubuntu-latest"
    name: test-python
    needs: [ pipenv_init ]

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup Python
        uses: actions/checkout@v3
      -
        name: Install pipenv
        run:
          pip3 install pipenv
      -
        name: Setup tests
        run:
          pipenv install --dev
      -
        name: Run tests
        run:
          pipenv run tests_ci
      -
        name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: junit_test_report
          path: results.xml

  docker_build:
    runs-on: "ubuntu-latest"
    name: docker-image-build
    needs: [ pipenv_init, run_python_tests ]

    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Branch name
      run: echo running on branch ${GITHUB_REF##*/}
    -
      name: Get dependencies
      uses: actions/download-artifact@v3
      with:
        name: init_pipenv
    -
      name: Build image
      env:
        BOT_COMMAND_PREFIX: ${{ secrets.BOT_COMMAND_PREFIX}}
        BOT_DB_HOST: ${{ secrets.BOT_DB_HOST}}
        BOT_DB_PASSWORD: ${{ secrets.BOT_DB_PASSWORD}}
        BOT_DB_USERNAME: ${{ secrets.BOT_DB_USERNAME}}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN}}
        BOT_TOKEN_DEV: ${{ secrets.BOT_TOKEN_DEV}}
      run: |
        docker build -t br1armabot:${GITHUB_REF##*/} .
