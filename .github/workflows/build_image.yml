# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Validate and Build Release

# This should only execute on direct pushes to master, or a merge to master
on:
  push:
    tags:
      - '**'

permissions:
  contents: read

jobs:
  pipenv_init:
    name: pipenv-init
    runs-on: "ubuntu-latest"

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup Python
        uses: actions/setup-python@v4
      -
        name: Setup virtualenvironment
        run:
          mkdir .venv && pip3 install pipenv && pipenv install --dev --keep-outdated
      -
        name: Pack artifacts
        run:
          tar -zcf pipenv.tar.gz .venv/
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: init_pipenv
          path: pipenv.tar.gz

  run_python_tests:
    runs-on: "ubuntu-latest"
    name: test-python
    needs: [ pipenv_init ]

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup Python
        uses: actions/setup-python@v4
      -
        name: Install pipenv
        run:
          pip3 install pipenv
      -
        name: Download dependencies
        uses: actions/download-artifact@v3
        with:
          name: init_pipenv
      -
        name: Unpack virtualenvironment
        run:
          tar -xvf pipenv.tar.gz
      -
        name: Run tests
        run:
          pipenv run tests_ci
      -
        name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: junit_test_report
          path: results.xml

  run_linter:
    runs-on: "ubuntu-latest"
    name: lint
    needs: [ pipenv_init ]

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup Python
        uses: actions/setup-python@v4
      -
        name: Install pipenv
        run:
          pip3 install pipenv
      -
        name: Download dependencies
        uses: actions/download-artifact@v3
        with:
          name: init_pipenv
      -
        name: Unpack virtualenvironment
        run:
          tar -xvf pipenv.tar.gz
      -
        name: Run linter
        run:
          pipenv run lint_ci --exit-zero --output-file gl-code-quality-report.json
      -
        name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: codequality
          path: gl-code-quality-report.json

  docker_build:
    runs-on: "ubuntu-latest"
    name: build-and-push
    needs: [ run_python_tests, run_linter ]

    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    -
      name: Extract docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: shadblade5/br1bot
        tags: |
          type=semver,pattern={{version}}
    -
      name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
